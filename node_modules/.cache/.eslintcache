[{"/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/index.js":"1","/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/App.js":"2","/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/reportWebVitals.js":"3","/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/PanelsArea.js":"4","/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/Panel.js":"5"},{"size":500,"mtime":1618164903406,"results":"6","hashOfConfig":"7"},{"size":336,"mtime":1618166521572,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1618164903406,"results":"9","hashOfConfig":"7"},{"size":1606,"mtime":1618166529140,"results":"10","hashOfConfig":"7"},{"size":619,"mtime":1618167426996,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xyoiga",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/index.js",[],["25","26"],"/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/App.js",[],"/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/reportWebVitals.js",[],"/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/PanelsArea.js",["27"],"import React, {Component} from 'react'\n\nimport Panel from './Panel'\n\nconst data1 = {\n  type: 'line',\n  data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n          label: 'Number of people vaccinated',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n          ],\n          borderColor : 'rgba(255, 99, 132, 0.7)',\n\n          borderWidth:3\n      }]\n  },\n  options: {\n      \n      scales: {\n          yAxes: [{\n              ticks: {\n                  beginAtZero: true\n              }\n          }]\n      }\n  }\n}\nconst data2 = {\n  type: 'line',\n  data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n          label: 'Number of people vaccinated',\n          data: [1, 2, 3, 5, 2, 3],\n          backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n          ],\n          borderColor : 'rgba(255, 99, 132, 0.7)',\n\n          borderWidth:3\n      }]\n  },\n  options: {\n    maintainAspectRatio: false,\n      scales: {\n          yAxes: [{\n              ticks: {\n                  beginAtZero: true\n              }\n          }]\n      }\n  }\n}\n\n\nclass PanelsArea extends Component {\n\n\n    render() {\n    \n      return (\n        <React.Fragment>\n          <Panel data={data1} name=\"numvaccinated\"/>\n          {/* <Panel data={data2} name=\"totalvaccinated\"/>\n          <Panel data={data2} name=\"x1\"/>\n          <Panel data={data2} name=\"y1\"/>\n          <Panel data={data2} name=\"z1\"/>  */}\n        </React.Fragment>\n\n      )\n    }\n  }\n\n\n\nexport default PanelsArea\n","/Users/sourabhmadur/Library/Mobile Documents/com~apple~CloudDocs/fun_scripts/Amplify/src/Panel.js",["28"],"import React, {Component} from 'react'\nimport Plot from 'react-plotly.js';\n\nimport Chart from 'chart.js';\n\nclass Panel extends Component{\n    constructor(props){\n        super(props);\n    this.state = {chart: null};\n    }\n    t\n\n    componentDidMount(props){\n        var ctx = document.getElementById(this.props.name).getContext('2d');\n        this.setState({chart : new Chart(ctx, this.props.data)});\n    }\n\n    render(){\n        return (\n\n                <div class=\"panel\">\n                <canvas id={this.props.name}></canvas>\n            </div>\n            \n            \n          )\n    }\n\n}\n\nexport default Panel",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":31,"column":7,"nodeType":"35","messageId":"36","endLine":31,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'data2' is assigned a value but never used.","Identifier","unusedVar","'Plot' is defined but never used.","no-global-assign","no-unsafe-negation"]